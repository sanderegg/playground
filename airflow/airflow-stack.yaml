version: "3.8"
x-common: &common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.2}
  init: true
  environment: &common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_USER}:${AIRFLOW_PASSWORD}@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: redis://:@${AIRFLOW_REDIS_HOST}:${AIRFLOW_REDIS_PORT}/2
    AIRFLOW__CELERY__BROKER_URL: redis://:@${AIRFLOW_REDIS_HOST}:${AIRFLOW_REDIS_PORT}/1
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
  user: "${AIRFLOW_UID:-1000}:${AIRFLOW_GID:-0}"
services:
  adminer:
    image: adminer:4.8.0
    init: true
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=nette
      - ADMINER_PLUGINS=json-column
    ports:
      - "18080:8080"

  postgres:
    image: postgres:13
    init: true
    environment:
      POSTGRES_USER: ${AIRFLOW_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_PASSWORD}
      POSTGRES_DB: airflow
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username",
          "${AIRFLOW_USER}",
          "--dbname",
          "airflow",
        ]
      interval: 15s
      retries: 5
    networks:
      - default
    command:
      [
        "postgres",
        "-c",
        "tcp_keepalives_idle=600",
        "-c",
        "tcp_keepalives_interval=600",
        "-c",
        "tcp_keepalives_count=5",
        "-c",
        "max_connections=413",
        "-c",
        "shared_buffers=256MB",
      ]

  scheduler:
    <<: *common
    command: scheduler
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    networks:
      - default
      - simcore_default
    environment:
      <<: *common-env
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER:-scu}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-adminadmin}

  webserver:
    <<: *common
    command: webserver
    networks:
      - default
      - simcore_default
    ports:
      - "28080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins

  worker:
    <<: *common
    command: celery worker
    networks:
      - default
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  flower:
    <<: *common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
networks:
  # needed so that airflow is accessible from the director-v2
  simcore_default:
    name: ${SWARM_STACK_NAME:-simcore}_default
    # external: true

volumes:
  postgres-db-volume:
  simcore_inputs:
    # external: true
    name: ${SWARM_STACK_NAME:-simcore}_simcore_input
  simcore_outputs:
    # external: true
    name: ${SWARM_STACK_NAME:-simcore}_simcore_output
  simcore_logs:
    # external: true
    name: ${SWARM_STACK_NAME:-simcore}_simcore_log
  # airflow_dags:
  #   # external: true
  #   name: ${SWARM_STACK_NAME:-simcore}_airflow_dags

  airflow_logs:
  airflow_plugins:
